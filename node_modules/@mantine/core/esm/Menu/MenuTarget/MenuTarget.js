import React, { cloneElement } from 'react';
import { isElement, createEventHandler } from '@mantine/utils';
import { useMenuContext } from '../Menu.context.js';
import { MENU_ERRORS } from '../Menu.errors.js';
import { Popover } from '../../Popover/Popover.js';

function MenuTarget({ children, refProp = "ref" }) {
  if (!isElement(children)) {
    throw new Error(MENU_ERRORS.children);
  }
  const ctx = useMenuContext();
  const onClick = createEventHandler(children.props.onClick, () => ctx.trigger === "click" && ctx.toggleDropdown());
  const onMouseEnter = createEventHandler(children.props.onMouseEnter, () => ctx.trigger === "hover" && ctx.openDropdown());
  const onMouseLeave = createEventHandler(children.props.onMouseLeave, () => ctx.trigger === "hover" && ctx.closeDropdown());
  return /* @__PURE__ */ React.createElement(Popover.Target, {
    refProp,
    popupType: "menu"
  }, cloneElement(children, {
    onClick,
    onMouseEnter,
    onMouseLeave,
    "data-expanded": ctx.opened ? true : void 0
  }));
}
MenuTarget.displayName = "@mantine/core/MenuTarget";

export { MenuTarget };
//# sourceMappingURL=MenuTarget.js.map
